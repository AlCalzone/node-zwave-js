{
	"id": "127",
	"manufacturer": "Fibargroup",
	"label": "FGFS101",
	"description": "Flood Sensor",
	"category": "18",
	"type_id": "0B00:1001,0B00:2001,0B00:3001",
	"versionmin": "0.000",
	"versionmax": "3.000",
	"library_type": "3",
	"protocol_version": "3.067",
	"listening": "1",
	"frequently_listening": "0",
	"routing": "1",
	"beaming": "1",
	"security": "0",
	"max_baud": "40000",
	"basicclass": "BASIC_TYPE_ROUTING_SLAVE",
	"genericclass": "GENERIC_TYPE_SENSOR_ALARM",
	"specificclass": "SPECIFIC_TYPE_ROUTING_ALARM_SENSOR",
	"certification": "",
	"thingid": "fgfs101",
	"db_version": "4",
	"info_overview": "<p>Fibaro Flood Sensor is a universal flood and temperature sensor. Device can be battery (ca. 2 years battery life) or VDC powered (12 or 24 VDC).</p>",
	"info_inclusion": "<p>Connect a DC power source to include the Fibaro Flood Sensor into the Z-Wave network in autoinclusion mode or triple click TMP button for manual inclusion.</p>",
	"info_exclusion": "<p>Triple click TMP button</p>",
	"info_wakeup": "<p>Triple click TMP button</p>",
	"info_usage": "",
	"first_approval_time": "2018-06-01 22:31:19",
	"last_update_time": "2018-09-30 12:33:38",
	"last_update_by": "275",
	"last_approve_time": "2018-09-30 12:33:49",
	"last_export_time": "2019-09-16 21:16:10",
	"approved_export": "",
	"created_by": "275",
	"ordering": "0",
	"state": "1",
	"deleted": "0",
	"locked": "0",
	"checked_out": "0",
	"checked_out_time": "0000-00-00 00:00:00",
	"image": "",
	"manufacturer_id": "18",
	"manufacturer_ref": "271",
	"manufacturer_thingid": "fibaro",
	"manufacturer_url": "http://www.fibaro.com/",
	"category_id": "Sensor",
	"category_label": "Sensor",
	"category_description": "Device used to measure something",
	"basicclass_id": "4",
	"genericclass_id": "4",
	"specificclass_id": "4",
	"versions": "All up to 3.0",
	"versionminDisplay": "0.0",
	"versionmaxDisplay": "3.0",
	"library_type_desc": "LIB_SLAVE_ENHANCED",
	"parameters": [
		{
			"id": "815",
			"device": "127",
			"param_id": "1",
			"label": "Alarm Cancellation Delay",
			"units": "",
			"description": "Time alarm still indicated after alarm condition has ceased",
			"type": "0",
			"size": "2",
			"value_min": "0",
			"value_max": "3600",
			"value_default": "0",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Time period (in seconds) that an alarm will still be indicated after the alarm condition has ceased.</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "816",
			"device": "127",
			"param_id": "2",
			"label": "Acoustic/visual signals On/Off in case of flooding",
			"units": "",
			"description": "LED indicator/acoustic alarm deactivation",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "255",
			"value_default": "3",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Parameter allows for LED indicator and acoustic alarm deactivation in case of flooding detection</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "282",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": [
				{
					"id": "1188",
					"parameter": "816",
					"value": "0",
					"label": "Acoustic and visual alarms inactive",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1189",
					"parameter": "816",
					"value": "1",
					"label": "Acoustic alarm inactive, visual alarm active",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1190",
					"parameter": "816",
					"value": "2",
					"label": "Acoustic alarm active, visual alarm inactive",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1191",
					"parameter": "816",
					"value": "3",
					"label": "Acoustic and visual alarms active",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				}
			]
		},
		{
			"id": "817",
			"device": "127",
			"param_id": "5",
			"label": "Type alarm frame sent to 1-st assoc group",
			"units": "",
			"description": "Type of cmd frame sent in case of flooding",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "255",
			"value_default": "255",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Parameter determines a type of command frame sent by the Sensor in case flooding has been detected or cancelled</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": [
				{
					"id": "1192",
					"parameter": "817",
					"value": "0",
					"label": "ALARM WATER",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1193",
					"parameter": "817",
					"value": "255",
					"label": "BASIC_SET",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "367"
				}
			]
		},
		{
			"id": "818",
			"device": "127",
			"param_id": "7",
			"label": "Forced Level of Dimming group 1",
			"units": "",
			"description": "Parameter specifying forced level of dimming f. asoc grp 1",
			"type": "0",
			"size": "1",
			"value_min": "1",
			"value_max": "255",
			"value_default": "255",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Value of the parameter specifying the forced level of dimming / opening sun blinds when comes 'switch on' / 'open' command to devices from association group 1.</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "275",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "819",
			"device": "127",
			"param_id": "9",
			"label": "Alarm cancelling or turning a device off",
			"units": "",
			"description": "Disable all-clear basic set & alarm frame generation",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "255",
			"value_default": "1",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Set to 0 to disable all-clear basic set &amp; alarm frame generation.  After flooding, device will keep reporting flooding even if flooding ceased.</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": [
				{
					"id": "1194",
					"parameter": "819",
					"value": "0",
					"label": "Alarm (flooding) cancellation inactive",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1195",
					"parameter": "819",
					"value": "1",
					"label": "Alarm (flooding) cancellation active",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				}
			]
		},
		{
			"id": "820",
			"device": "127",
			"param_id": "10",
			"label": "Interval betw. successive readings of temp sensors",
			"units": "",
			"description": "Interval betw. successive readings of temperature ",
			"type": "0",
			"size": "2",
			"value_min": "1",
			"value_max": "32767",
			"value_default": "300",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Interval between successive readings of temperature in seconds.</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "821",
			"device": "127",
			"param_id": "12",
			"label": "Insensitiveness to temperature changes.",
			"units": "",
			"description": "Minimum temperature change value",
			"type": "0",
			"size": "2",
			"value_min": "0",
			"value_max": "1000",
			"value_default": "50",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Determines a minimum temperature change value (insensitivity level; def: 0,5C), resulting in a temperature report being sent to the main controller, according to the Parameter 10 settings</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "282",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "822",
			"device": "127",
			"param_id": "13",
			"label": "Alarm BROADCAST",
			"units": "",
			"description": "Transmit the alarm or control frame in 'broadcast' mode",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "255",
			"value_default": "0",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Transmit the alarm or control frame in 'broadcast' mode.  Information sent in this mode is not repeated by the mesh network.</p> <p><strong>NOTE:</strong> If the broadcast mode of information transmission is activated for a given alarm, then the information <strong>is not</strong> relayed through the mesh network.  It is only heard by directly reachable devices.</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": [
				{
					"id": "1196",
					"parameter": "822",
					"value": "0",
					"label": "Broadcast inactive",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1197",
					"parameter": "822",
					"value": "1",
					"label": "Flood broadcast active, Tamper broadcast inactive",
					"overview": "<p>Flood broadcast mode active, Tamper broadcast mode inactive</p>",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "282"
				},
				{
					"id": "1198",
					"parameter": "822",
					"value": "2",
					"label": "Flood broadcast inactive, Tamper broadcast active",
					"overview": "<p>Flood broadcast mode inactive, Tamper broadcast mode active</p>",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "367"
				},
				{
					"id": "1199",
					"parameter": "822",
					"value": "3",
					"label": "Flood and Tamper broadcast mode active",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				}
			]
		},
		{
			"id": "823",
			"device": "127",
			"param_id": "50",
			"label": "Low temperature alarm threshold",
			"units": "",
			"description": "Temperature value below which LED indicator blinks ",
			"type": "0",
			"size": "2",
			"value_min": "-10000",
			"value_max": "10000",
			"value_default": "1500",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>The parameter stores a temperature value (def. 15C), below which LED indicator blinks with a colour determined by a Parameter 61 settings. By default the LED indicator blinks blue.</p> <p>Negative numbers are encoded in U2 (two's compliment) standard.</p> <ul><li>-1 actual temperature = 65535 reported</li> <li>-10000 = 55536</li> <li>-32768 = 32768</li> <li>32767 = 32767</li> </ul>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "824",
			"device": "127",
			"param_id": "51",
			"label": "High temperature alarm threshold",
			"units": "",
			"description": "Temperature value above which LED indicator blinks",
			"type": "0",
			"size": "2",
			"value_min": "-10000",
			"value_max": "10000",
			"value_default": "3500",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>The parameter stores a temperature value (def. 35C), above which LED indicator blinks with a colour determined by the Parameter 62 settings. By default the LED indicator blinks red</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "282",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "825",
			"device": "127",
			"param_id": "61",
			"label": "Low temperature alarm indicator colour",
			"units": "",
			"description": "Default is blue (0x000000FF).",
			"type": "0",
			"size": "4",
			"value_min": "0",
			"value_max": "16777215",
			"value_default": "255",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p><strong>NOTE:</strong> A main controller interprets colours as a sum of it component colours value. Each colours value is a number from 0 to 255. Eg: Indicated colour = 65536 * RED value + 256 * GREEN value + BLUE value</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "826",
			"device": "127",
			"param_id": "62",
			"label": "High temperature alarm indicator colour",
			"units": "",
			"description": "Default is red (0x00FF0000).  65535 * Red + 256 * Green + Blue",
			"type": "0",
			"size": "4",
			"value_min": "0",
			"value_max": "16777215",
			"value_default": "16711680",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p><strong>NOTE:</strong> A main controller interprets colours as a sum of it component colours value. Each colours value is a number from 0 to 255. Eg: Indicated colour = 65536 * RED value + 256 * GREEN value + BLUE value</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "827",
			"device": "127",
			"param_id": "63",
			"label": "Managing a LED indicator under standard operation",
			"units": "",
			"description": "Parameter determines LED indicator’s operation",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "255",
			"value_default": "2",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Parameter determines LED indicator’s operation. Set to 0 turns the indicator off, saving a battery life</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "282",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": [
				{
					"id": "1200",
					"parameter": "827",
					"value": "0",
					"label": "LED indicator doesn’t indicate the temperature",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1201",
					"parameter": "827",
					"value": "1",
					"label": "LED blinks temperature every measurement",
					"overview": "<p>Every time temperature is reported, LED is blinked.</p>",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "367"
				},
				{
					"id": "1202",
					"parameter": "827",
					"value": "2",
					"label": "LED indicates the temperature continuously",
					"overview": "<p>Only available if the unit is powered by an external power source.</p>",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "367"
				}
			]
		},
		{
			"id": "828",
			"device": "127",
			"param_id": "73",
			"label": "Temperature measurement compensation",
			"units": "",
			"description": "Temperature value to compensate between air temp",
			"type": "0",
			"size": "2",
			"value_min": "-10000",
			"value_max": "10000",
			"value_default": "0",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Parameter stores a temperature value to be added to or deducted from the current temperature measured by internal temperature sensor in order to compensate the difference between air temperature and temperature at the floor level</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "282",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "829",
			"device": "127",
			"param_id": "74",
			"label": "Alarm frame sent to 2-nd Assoc Grp",
			"units": "",
			"description": "Aalarms resulting from sensor’s vibrations",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "255",
			"value_default": "2",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>(MOVEMENT_TAMPER / BUTTON_TAMPER) The device is able to turn on alarms resulting from sensor’s vibrations e.g. when the sensor is moved, or the TMP button released. 2-nd Association Group alarms are not cancelled.</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "282",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": [
				{
					"id": "1203",
					"parameter": "829",
					"value": "0",
					"label": "Tamper alarms inactive",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1204",
					"parameter": "829",
					"value": "1",
					"label": "Button tamper alarm active",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1205",
					"parameter": "829",
					"value": "2",
					"label": "Movement tamper alarm active",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				},
				{
					"id": "1206",
					"parameter": "829",
					"value": "3",
					"label": "Button and movement tampers alarm active",
					"overview": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "0"
				}
			]
		},
		{
			"id": "830",
			"device": "127",
			"param_id": "75",
			"label": "Visual and audible alarms duration",
			"units": "",
			"description": "Visual and audible alarm duration",
			"type": "0",
			"size": "2",
			"value_min": "0",
			"value_max": "65535",
			"value_default": "0",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>User can silence the Flood Sensor. Because the Sensor’s alarm may last for a long time, it’s possible to turn off visual and audible alarm signaling to save battery. The parameter determines a time period after which alarm will become “quiet” - still active but the device will go into battery saving mode.  Visual or acoustic alarm will be reactivated after time period specified in parameter 76.  When alarm status ceases, alarm will be turned off immediately.</p> <p>Value of 0 means visual and accoustic alarms are active indefinitely.  In battery power mode sensor will never go to sleep which may shorten battery life significantly.</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "831",
			"device": "127",
			"param_id": "76",
			"label": "Alarm/basic retransmission time when flooding",
			"units": "seconds",
			"description": "Time period after which alarm frames will be retransmitted",
			"type": "0",
			"size": "2",
			"value_min": "0",
			"value_max": "65535",
			"value_default": "0",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Parameter determines time period after which an alarm frame will be retransmitted. Value of 0 disables alarm frame retransmission.</p> <p><strong>NOTE:</strong> In case the time period set in this parameter is shorter than the one specified in parameter 75, the device will not quiet the alarm; it will remain active.</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "832",
			"device": "127",
			"param_id": "77",
			"label": "Flood sensor functionality turned off",
			"units": "",
			"description": "Allows for turning of the internal flood sensor",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "255",
			"value_default": "0",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Allows for turning of the internal flood sensor. Tamper and built in temperature sensor will remain active</p>",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "282",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": [
				{
					"id": "1207",
					"parameter": "832",
					"value": "0",
					"label": "Default flood sensor operation ",
					"overview": "<p>Default flood sensor operation (flood detection, reactions)</p>",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "282"
				},
				{
					"id": "1208",
					"parameter": "832",
					"value": "1",
					"label": "Built in flood sensor TURNED OFF",
					"overview": "<p><strong>Will not change state</strong>; will not send alarms nor basic set frames when flood sensor changes.</p>",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "367"
				}
			]
		}
	],
	"associations": [
		{
			"id": "197",
			"device": "127",
			"group_id": "1",
			"label": "Flood Alarm",
			"description": "",
			"max": "5",
			"controller": "0",
			"overview": "",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "0"
		},
		{
			"id": "198",
			"device": "127",
			"group_id": "2",
			"label": "Tilt & Tamper Sensors",
			"description": "",
			"max": "5",
			"controller": "0",
			"overview": "",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "367"
		},
		{
			"id": "199",
			"device": "127",
			"group_id": "3",
			"label": "Device Status",
			"description": "",
			"max": "1",
			"controller": "1",
			"overview": "",
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "0"
		}
	],
	"documents": [
		{
			"id": "16",
			"device": "127",
			"file": "Fibaro---FGFS-101-Flood-Sensor-en-2-1-2-3.pdf",
			"label": "English User Manual (v2.1-v2.3)",
			"created_by": "276",
			"ordering": "16",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00"
		},
		{
			"id": "1338",
			"device": "127",
			"file": "fgfs101.jpg",
			"label": "Product Image",
			"created_by": "275",
			"ordering": "1330",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00"
		}
	],
	"endpoints": [
		{
			"id": "65",
			"device": "127",
			"number": "0",
			"label": "Endpoint 0",
			"basicclass": {
				"id": "5",
				"value": "4",
				"name": "BASIC_TYPE_ROUTING_SLAVE",
				"label": "BASIC_TYPE_ROUTING_SLAVE",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"genericclass": {
				"id": "26",
				"value": "161",
				"name": "GENERIC_TYPE_SENSOR_ALARM",
				"label": "GENERIC_TYPE_SENSOR_ALARM",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"specificclass": {
				"id": "54",
				"generic": "26",
				"value": "2",
				"name": "SPECIFIC_TYPE_ROUTING_ALARM_SENSOR",
				"label": "SPECIFIC_TYPE_ROUTING_ALARM_SENSOR",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "314",
			"commandClasses": [
				{
					"id": "458",
					"endpoint": "65",
					"commandclass": {
						"id": "1",
						"name": "NO_OPERATION",
						"label": "No Operation - used for PINGing a device.",
						"class_ref": "0",
						"support_oh1": "0",
						"support_oh2": "0",
						"support_ozw": "0",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "275"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "459",
					"endpoint": "65",
					"commandclass": {
						"id": "33",
						"name": "BASIC",
						"label": "BASIC",
						"class_ref": "32",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "455",
					"endpoint": "65",
					"commandclass": {
						"id": "49",
						"name": "SENSOR_BINARY",
						"label": "SENSOR_BINARY",
						"class_ref": "48",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": [
						{
							"id": "143",
							"commandclass": "455",
							"name": "sensor_binary",
							"config": "",
							"label": "Binary Sensor",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "314",
							"options": []
						}
					]
				},
				{
					"id": "449",
					"endpoint": "65",
					"commandclass": {
						"id": "97",
						"name": "MULTI_INSTANCE",
						"label": "MULTI_INSTANCE",
						"class_ref": "96",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "2",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "448",
					"endpoint": "65",
					"commandclass": {
						"id": "113",
						"name": "CONFIGURATION",
						"label": "CONFIGURATION",
						"class_ref": "112",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "454",
					"endpoint": "65",
					"commandclass": {
						"id": "115",
						"name": "MANUFACTURER_SPECIFIC",
						"label": "MANUFACTURER_SPECIFIC",
						"class_ref": "114",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "460",
					"endpoint": "65",
					"commandclass": {
						"id": "129",
						"name": "BATTERY",
						"label": "BATTERY",
						"class_ref": "128",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "447",
					"endpoint": "65",
					"commandclass": {
						"id": "134",
						"name": "ASSOCIATION",
						"label": "ASSOCIATION",
						"class_ref": "133",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "457",
					"endpoint": "65",
					"commandclass": {
						"id": "135",
						"name": "VERSION",
						"label": "VERSION",
						"class_ref": "134",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "456",
					"endpoint": "65",
					"commandclass": {
						"id": "157",
						"name": "SENSOR_ALARM",
						"label": "SENSOR_ALARM",
						"class_ref": "156",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "1",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": [
						{
							"id": "144",
							"commandclass": "456",
							"name": "alarm_general",
							"config": "type=GENERAL",
							"label": "Alarm (general)",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "314",
							"options": []
						},
						{
							"id": "145",
							"commandclass": "456",
							"name": "sensor_flood",
							"config": "type=FLOOD",
							"label": "Alarm (water)",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "314",
							"options": []
						}
					]
				}
			]
		},
		{
			"id": "66",
			"device": "127",
			"number": "1",
			"label": "Endpoint 1",
			"basicclass": {
				"id": "5",
				"value": "4",
				"name": "BASIC_TYPE_ROUTING_SLAVE",
				"label": "BASIC_TYPE_ROUTING_SLAVE",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"genericclass": {
				"id": "19",
				"value": "32",
				"name": "GENERIC_TYPE_SENSOR_BINARY",
				"label": "GENERIC_TYPE_SENSOR_BINARY",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"specificclass": {
				"id": "45",
				"generic": "19",
				"value": "1",
				"name": "SPECIFIC_TYPE_ROUTING_SENSOR_BINARY",
				"label": "SPECIFIC_TYPE_ROUTING_SENSOR_BINARY",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "314",
			"commandClasses": [
				{
					"id": "451",
					"endpoint": "66",
					"commandclass": {
						"id": "33",
						"name": "BASIC",
						"label": "BASIC",
						"class_ref": "32",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "0",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "450",
					"endpoint": "66",
					"commandclass": {
						"id": "49",
						"name": "SENSOR_BINARY",
						"label": "SENSOR_BINARY",
						"class_ref": "48",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": [
						{
							"id": "141",
							"commandclass": "450",
							"name": "sensor_binary",
							"config": "",
							"label": "Binary Sensor 1",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "314",
							"options": []
						}
					]
				}
			]
		},
		{
			"id": "67",
			"device": "127",
			"number": "2",
			"label": "Endpoint 2",
			"basicclass": {
				"id": "5",
				"value": "4",
				"name": "BASIC_TYPE_ROUTING_SLAVE",
				"label": "BASIC_TYPE_ROUTING_SLAVE",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"genericclass": {
				"id": "20",
				"value": "33",
				"name": "GENERIC_TYPE_SENSOR_MULTILEVEL",
				"label": "GENERIC_TYPE_SENSOR_MULTILEVEL",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"specificclass": {
				"id": "46",
				"generic": "20",
				"value": "1",
				"name": "SPECIFIC_TYPE_ROUTING_SENSOR_MULTILEVEL",
				"label": "SPECIFIC_TYPE_ROUTING_SENSOR_MULTILEVEL",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "314",
			"commandClasses": [
				{
					"id": "453",
					"endpoint": "67",
					"commandclass": {
						"id": "33",
						"name": "BASIC",
						"label": "BASIC",
						"class_ref": "32",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "0",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": []
				},
				{
					"id": "452",
					"endpoint": "67",
					"commandclass": {
						"id": "50",
						"name": "SENSOR_MULTILEVEL",
						"label": "SENSOR_MULTILEVEL",
						"class_ref": "49",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "1",
					"version": "0",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "314",
					"channels": [
						{
							"id": "142",
							"commandclass": "452",
							"name": "sensor_temperature",
							"config": "type=TEMPERATURE",
							"label": "Sensor (temperature) 2",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "314",
							"options": []
						}
					]
				}
			]
		}
	],
	"changelog": [],
	"xml": [
		{
			"id": "81",
			"create_time": "2016-01-25 13:46:51",
			"name": "",
			"description": "",
			"xml": "<node>\r\n  <deviceClass>\r\n    <basicDeviceClass>ROUTING_SLAVE</basicDeviceClass>\r\n    <genericDeviceClass>ALARM_SENSOR</genericDeviceClass>\r\n    <specificDeviceClass>ALARM_SENSOR_ROUTING</specificDeviceClass>\r\n  </deviceClass>\r\n  <homeId>0xe390a32f</homeId>\r\n  <nodeId>25</nodeId>\r\n  <version>4</version>\r\n  <name>Wassermelder</name>\r\n  <location>UG Heizungskeller</location>\r\n  <manufacturer>0x10f</manufacturer>\r\n  <deviceId>0x1001</deviceId>\r\n  <deviceType>0xb00</deviceType>\r\n  <listening>true</listening>\r\n  <frequentlyListening>false</frequentlyListening>\r\n  <routing>true</routing>\r\n  <healState>DONE @ 2015-12-22T16:47:08+0000</healState>\r\n  <security>false</security>\r\n  <beaming>true</beaming>\r\n  <maxBaudRate>40000</maxBaudRate>\r\n  <supportedCommandClasses>\r\n    <entry>\r\n      <commandClass>ASSOCIATION</commandClass>\r\n      <associationCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n        <configAssociations>\r\n          <entry>\r\n            <int>1</int>\r\n            <associationGroup>\r\n              <Index>1</Index>\r\n              <Nodes>\r\n                <int>1</int>\r\n              </Nodes>\r\n            </associationGroup>\r\n          </entry>\r\n          <entry>\r\n            <int>2</int>\r\n            <associationGroup>\r\n              <Index>2</Index>\r\n              <Nodes/>\r\n            </associationGroup>\r\n          </entry>\r\n          <entry>\r\n            <int>3</int>\r\n            <associationGroup>\r\n              <Index>3</Index>\r\n              <Nodes>\r\n                <int>1</int>\r\n              </Nodes>\r\n            </associationGroup>\r\n          </entry>\r\n        </configAssociations>\r\n        <maxGroups>3</maxGroups>\r\n      </associationCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>CONFIGURATION</commandClass>\r\n      <configurationCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n        <configParameters>\r\n          <entry>\r\n            <int>1</int>\r\n            <configurationParameter>\r\n              <index>1</index>\r\n              <size>2</size>\r\n              <value>300</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>2</int>\r\n            <configurationParameter>\r\n              <index>2</index>\r\n              <size>1</size>\r\n              <value>3</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>5</int>\r\n            <configurationParameter>\r\n              <index>5</index>\r\n              <size>1</size>\r\n              <value>0</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>7</int>\r\n            <configurationParameter>\r\n              <index>7</index>\r\n              <size>1</size>\r\n              <value>-1</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>9</int>\r\n            <configurationParameter>\r\n              <index>9</index>\r\n              <size>1</size>\r\n              <value>1</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>73</int>\r\n            <configurationParameter>\r\n              <index>73</index>\r\n              <size>2</size>\r\n              <value>0</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>10</int>\r\n            <configurationParameter>\r\n              <index>10</index>\r\n              <size>2</size>\r\n              <value>3600</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>74</int>\r\n            <configurationParameter>\r\n              <index>74</index>\r\n              <size>1</size>\r\n              <value>0</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>75</int>\r\n            <configurationParameter>\r\n              <index>75</index>\r\n              <size>2</size>\r\n              <value>0</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>12</int>\r\n            <configurationParameter>\r\n              <index>12</index>\r\n              <size>2</size>\r\n              <value>50</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>76</int>\r\n            <configurationParameter>\r\n              <index>76</index>\r\n              <size>2</size>\r\n              <value>0</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>13</int>\r\n            <configurationParameter>\r\n              <index>13</index>\r\n              <size>1</size>\r\n              <value>0</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>77</int>\r\n            <configurationParameter>\r\n              <index>77</index>\r\n              <size>1</size>\r\n              <value>0</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>50</int>\r\n            <configurationParameter>\r\n              <index>50</index>\r\n              <size>2</size>\r\n              <value>1000</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>51</int>\r\n            <configurationParameter>\r\n              <index>51</index>\r\n              <size>2</size>\r\n              <value>4000</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>61</int>\r\n            <configurationParameter>\r\n              <index>61</index>\r\n              <size>4</size>\r\n              <value>255</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>62</int>\r\n            <configurationParameter>\r\n              <index>62</index>\r\n              <size>4</size>\r\n              <value>16711680</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n          <entry>\r\n            <int>63</int>\r\n            <configurationParameter>\r\n              <index>63</index>\r\n              <size>1</size>\r\n              <value>1</value>\r\n              <readOnly>false</readOnly>\r\n              <writeOnly>false</writeOnly>\r\n            </configurationParameter>\r\n          </entry>\r\n        </configParameters>\r\n      </configurationCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>MULTI_INSTANCE</commandClass>\r\n      <multiInstanceCommandClass>\r\n        <version>2</version>\r\n        <instances>1</instances>\r\n        <endpoints>\r\n          <entry>\r\n            <int>1</int>\r\n            <endPoint>\r\n              <deviceClass>\r\n                <basicDeviceClass>ROUTING_SLAVE</basicDeviceClass>\r\n                <genericDeviceClass>BINARY_SENSOR</genericDeviceClass>\r\n                <specificDeviceClass>ROUTING_SENSOR_BINARY</specificDeviceClass>\r\n              </deviceClass>\r\n              <endpointId>1</endpointId>\r\n              <supportedCommandClasses>\r\n                <entry>\r\n                  <commandClass>SENSOR_BINARY</commandClass>\r\n                  <binarySensorCommandClass>\r\n                    <version>1</version>\r\n                    <instances>1</instances>\r\n                    <isGetSupported>true</isGetSupported>\r\n                  </binarySensorCommandClass>\r\n                </entry>\r\n                <entry>\r\n                  <commandClass>BASIC</commandClass>\r\n                  <basicCommandClass>\r\n                    <version>0</version>\r\n                    <instances>0</instances>\r\n                    <isGetSupported>true</isGetSupported>\r\n                  </basicCommandClass>\r\n                </entry>\r\n              </supportedCommandClasses>\r\n            </endPoint>\r\n          </entry>\r\n          <entry>\r\n            <int>2</int>\r\n            <endPoint>\r\n              <deviceClass>\r\n                <basicDeviceClass>ROUTING_SLAVE</basicDeviceClass>\r\n                <genericDeviceClass>MULTILEVEL_SENSOR</genericDeviceClass>\r\n                <specificDeviceClass>ROUTING_SENSOR_MULTILEVEL</specificDeviceClass>\r\n              </deviceClass>\r\n              <endpointId>2</endpointId>\r\n              <supportedCommandClasses>\r\n                <entry>\r\n                  <commandClass>SENSOR_MULTILEVEL</commandClass>\r\n                  <multiLevelSensorCommandClass>\r\n                    <version>0</version>\r\n                    <instances>1</instances>\r\n                    <sensors>\r\n                      <entry>\r\n                        <multilevelSensorType>TEMPERATURE</multilevelSensorType>\r\n                        <multilevelSensor>\r\n                          <sensorType>TEMPERATURE</sensorType>\r\n                          <initialised>true</initialised>\r\n                        </multilevelSensor>\r\n                      </entry>\r\n                    </sensors>\r\n                    <isGetSupported>true</isGetSupported>\r\n                  </multiLevelSensorCommandClass>\r\n                </entry>\r\n                <entry>\r\n                  <commandClass>BASIC</commandClass>\r\n                  <basicCommandClass>\r\n                    <version>0</version>\r\n                    <instances>0</instances>\r\n                    <isGetSupported>true</isGetSupported>\r\n                  </basicCommandClass>\r\n                </entry>\r\n              </supportedCommandClasses>\r\n            </endPoint>\r\n          </entry>\r\n        </endpoints>\r\n        <endpointsAreTheSameDeviceClass>false</endpointsAreTheSameDeviceClass>\r\n      </multiInstanceCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>MANUFACTURER_SPECIFIC</commandClass>\r\n      <manufacturerSpecificCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n      </manufacturerSpecificCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>SENSOR_BINARY</commandClass>\r\n      <binarySensorCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n        <isGetSupported>true</isGetSupported>\r\n      </binarySensorCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>SENSOR_ALARM</commandClass>\r\n      <alarmSensorCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n        <alarms>\r\n          <entry>\r\n            <alarmSensorType>GENERAL</alarmSensorType>\r\n            <alarmSensor>\r\n              <alarmType>GENERAL</alarmType>\r\n            </alarmSensor>\r\n          </entry>\r\n          <entry>\r\n            <alarmSensorType>FLOOD</alarmSensorType>\r\n            <alarmSensor>\r\n              <alarmType>FLOOD</alarmType>\r\n            </alarmSensor>\r\n          </entry>\r\n        </alarms>\r\n        <isGetSupported>true</isGetSupported>\r\n      </alarmSensorCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>VERSION</commandClass>\r\n      <versionCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n        <libraryType>LIB_SLAVE_ENHANCED</libraryType>\r\n        <protocolVersion>3.67</protocolVersion>\r\n        <applicationVersion>25.25</applicationVersion>\r\n      </versionCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>NO_OPERATION</commandClass>\r\n      <noOperationCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n      </noOperationCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>BASIC</commandClass>\r\n      <basicCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n        <isGetSupported>true</isGetSupported>\r\n      </basicCommandClass>\r\n    </entry>\r\n    <entry>\r\n      <commandClass>BATTERY</commandClass>\r\n      <batteryCommandClass>\r\n        <version>1</version>\r\n        <instances>1</instances>\r\n        <isGetSupported>true</isGetSupported>\r\n      </batteryCommandClass>\r\n    </entry>\r\n  </supportedCommandClasses>\r\n  <nodeNeighbors>\r\n    <int>2</int>\r\n    <int>7</int>\r\n    <int>8</int>\r\n    <int>11</int>\r\n    <int>12</int>\r\n    <int>14</int>\r\n    <int>15</int>\r\n    <int>16</int>\r\n    <int>19</int>\r\n    <int>20</int>\r\n    <int>28</int>\r\n  </nodeNeighbors>\r\n  <lastSent>2016-01-21 15:53:17.539 UTC</lastSent>\r\n  <lastReceived>2016-01-21 15:53:17.584 UTC</lastReceived>\r\n</node>",
			"result": "openHAB XML file processing -:<ul><li>Device identifiers: 010F:0B00:1001</li><li>Manufacturer: Fibaro System</li><li>Existing Product: FGFS101</li><li>BASIC Class: [4] ROUTING_SLAVE</li><li>GENERIC Class: [161] ALARM_SENSOR</li><li>SPECIFIC Class: [2] ALARM_SENSOR_ROUTING</li><li>Listening: true</li><li>Frequently Listening: false</li><li>Routing: true</li><li>Beaming: true</li><li>Security: false</li><li>Maximum Data Rate: 40000</li><li>Firmware Version: 25.025</li><li>Protocol Version: 3.067</li>ASSOCIATION[1] CONFIGURATION[1] MULTI_INSTANCE[2] <li>BASIC Class: ROUTING_SLAVE</li><li>GENERIC Class: BINARY_SENSOR</li><li>SPECIFIC Class: ROUTING_SENSOR_BINARY</li>SENSOR_BINARY[1] BASIC[0] <li>BASIC Class: ROUTING_SLAVE</li><li>GENERIC Class: MULTILEVEL_SENSOR</li><li>SPECIFIC Class: ROUTING_SENSOR_MULTILEVEL</li>SENSOR_MULTILEVEL[0] BASIC[0] MANUFACTURER_SPECIFIC[1] SENSOR_BINARY[1] SENSOR_ALARM[1] VERSION[1] NO_OPERATION[1] BASIC[1] BATTERY[1] <li>NIF Reported Classes: </li></ul>Generation of database updates -:<ul><li>Updated BASIC Class to ROUTING_SLAVE (4)</li><li>Updated GENERIC Class to ALARM_SENSOR (161)</li><li>Updated SPECIFIC Class to ALARM_SENSOR_ROUTING (2)</li><li>Added Supported Command Class ASSOCIATION to endpoint 0</li><li>Added Supported Command Class CONFIGURATION to endpoint 0</li><li>Added Supported Command Class MULTI_INSTANCE to endpoint 0</li><li>Creating endpoint 1</li><li>BASIC Class set to ROUTING_SLAVE (4)</li><li>GENERIC Class set to BINARY_SENSOR (32)</li><li>SPECIFIC Class set to ROUTING_SENSOR_BINARY (1)</li><li>Added Supported Command Class SENSOR_BINARY to endpoint 1</li><li>Added SENSOR_BINARY sensor</li><li>Added Supported Command Class BASIC to endpoint 1</li><li>Creating endpoint 2</li><li>BASIC Class set to ROUTING_SLAVE (4)</li><li>GENERIC Class set to MULTILEVEL_SENSOR (33)</li><li>SPECIFIC Class set to ROUTING_SENSOR_MULTILEVEL (1)</li><li>Added Supported Command Class SENSOR_MULTILEVEL to endpoint 2</li><li>Added SENSOR_MULTILEVEL sensor as channel TEMPERATURE</li><li>Added Supported Command Class BASIC to endpoint 2</li><li>Added Supported Command Class MANUFACTURER_SPECIFIC to endpoint 0</li><li>Added Supported Command Class SENSOR_BINARY to endpoint 0</li><li>Added SENSOR_BINARY sensor</li><li>Added Supported Command Class SENSOR_ALARM to endpoint 0</li><li>Added SENSOR_ALARM as channel GENERAL</li><li>Added SENSOR_ALARM as channel FLOOD</li><li>Added Supported Command Class VERSION to endpoint 0</li><li>Added Supported Command Class NO_OPERATION to endpoint 0</li><li>Added Supported Command Class BASIC to endpoint 0</li><li>Added Supported Command Class BATTERY to endpoint 0</li></ul>",
			"device": "127",
			"ordering": "72",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "314"
		}
	],
	"user_owned": false,
	"database_id": "127",
	"errors": [],
	"warnings": [],
	"notices": [
		"Endpoint 1 has no command class linked to the basic class."
	]
}