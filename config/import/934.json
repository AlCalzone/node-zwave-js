{
	"id": "934",
	"manufacturer": "FortrezZ LLC",
	"label": "FMI",
	"description": "Flow Meter",
	"category": "18",
	"type_id": "0473:0110",
	"versionmin": "0.000",
	"versionmax": "255.255",
	"library_type": "3",
	"protocol_version": "4.005",
	"listening": "1",
	"frequently_listening": "0",
	"routing": "1",
	"beaming": "1",
	"security": "0",
	"max_baud": "40000",
	"basicclass": "BASIC_TYPE_ROUTING_SLAVE",
	"genericclass": "GENERIC_TYPE_SENSOR_MULTILEVEL",
	"specificclass": "SPECIFIC_TYPE_ROUTING_SENSOR_MULTILEVEL",
	"certification": "",
	"thingid": "fmi",
	"db_version": "1",
	"info_overview": "<p>With Flow meter, you have the power to automate, manage water consumption, and detect leaks in your home or building.</p> <p>This is an integral part to a complete water management solution.  Flow Meter tracks water usage and reports gallons used.  Track your households water usage and drill into reports to find out where your peak consumption is and make changes to reduce your water bills.</p> <p>Flow meter tells you if water is flowing or if it’s off.  It knows if the flow is small, like a running toilet, or if it’s large, like a garden hose left on.</p> <p>Flow meter can detect leaks or fixtures left on.  It tracks usage and allows you create smart triggers using your Z-wave home automation system.  To add to it’s capabilities, flow meter checks the temperature in the nearby surrounds to detect for freezing conditions and sends temperature alerts.</p> <p>There’s also a backup battery, just in case power is interrupted.  You won’t have to worry about lost data or lack of leak monitoring.  Plumbed on the water main, flow meter is sure to be a valuable part of your total home automation &amp; leak prevention system.</p>",
	"info_inclusion": "<ol><li>Set up  the  inclusion  mode  at  the  controller;</li> <li>Press  the  switch  once  and  the  controller  will indicate the unit has been included in the network.  Also, the LED will blink when the inclusion completes. </li> </ol>",
	"info_exclusion": "<ol><li>Set up the exclusion mode at the controller;</li> <li>Briefly press the switch once and then release.  The controller will indicate the unit has been removed from the network.  The LED will blink when the exclusion completes.</li> </ol>",
	"info_wakeup": "",
	"info_usage": "",
	"first_approval_time": "0000-00-00 00:00:00",
	"last_update_time": "2018-11-10 07:32:59",
	"last_update_by": "275",
	"last_approve_time": "2018-11-10 07:33:16",
	"last_export_time": "2019-09-16 21:28:46",
	"approved_export": "",
	"created_by": "2063",
	"ordering": "0",
	"state": "1",
	"deleted": "0",
	"locked": "0",
	"checked_out": "0",
	"checked_out_time": "0000-00-00 00:00:00",
	"image": "",
	"manufacturer_id": "38",
	"manufacturer_ref": "132",
	"manufacturer_thingid": "fortrezz",
	"manufacturer_url": "",
	"category_id": "Sensor",
	"category_label": "Sensor",
	"category_description": "Device used to measure something",
	"basicclass_id": "4",
	"genericclass_id": "4",
	"specificclass_id": "4",
	"versions": "All",
	"versionminDisplay": "0.0",
	"versionmaxDisplay": "255.255",
	"library_type_desc": "LIB_SLAVE_ENHANCED",
	"parameters": [
		{
			"id": "5494",
			"device": "934",
			"param_id": "1",
			"label": "Temperature Low Threshold",
			"units": "Degrees Celsius",
			"description": "Temperature Low Threshold",
			"type": "0",
			"size": "1",
			"value_min": "-10",
			"value_max": "69",
			"value_default": "4",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "",
			"ordering": "2644",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "5495",
			"device": "934",
			"param_id": "2",
			"label": "Temperature High Threshold",
			"units": "Degrees Celsius",
			"description": "Temperature High Threshold",
			"type": "0",
			"size": "1",
			"value_min": "-9",
			"value_max": "70",
			"value_default": "70",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "",
			"ordering": "2645",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "5496",
			"device": "934",
			"param_id": "3",
			"label": "Meter Count",
			"units": "Tenths of Gallons",
			"description": "Meter Count",
			"type": "0",
			"size": "4",
			"value_min": "0",
			"value_max": "99999999",
			"value_default": "0",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Count rolls over at 99,999,999</p>",
			"ordering": "2646",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "5497",
			"device": "934",
			"param_id": "4",
			"label": "Meter Report Interval",
			"units": "10s of Seconds",
			"description": "Meter Report Interval",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "255",
			"value_default": "6",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Meter Report Interval, <strong>while liquid flow is detected</strong>.  If 0 is set, then no continuous reporting during liquid flow.  Note:  Report is sent every 10 hours whether or not flow is detected.</p> <p>Default is 6, which is 60 seconds.</p>",
			"ordering": "2647",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "5498",
			"device": "934",
			"param_id": "5",
			"label": "Meter Leak Threshold",
			"units": "Tenths of Gallons",
			"description": "Meter Leak Threshold",
			"type": "0",
			"size": "2",
			"value_min": "0",
			"value_max": "65535",
			"value_default": "50",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Meter Leak Threshold.  Set the threshold count for reporting Flow vs High Flow.  Default is set to 50 (5 gallons).</p> <p>Flow above 5 gallons/min sends (Above Threshold / 255)</p> <p>Flow below 5 gallons/min sends (Below Threshold / 128)</p> <p>Note: If MLS enabled, Value of 0 = No flow detected (during interval)</p>",
			"ordering": "2648",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		},
		{
			"id": "5499",
			"device": "934",
			"param_id": "6",
			"label": "Notification Commands MLS",
			"units": "",
			"description": "Toggle Commands or MLS",
			"type": "0",
			"size": "1",
			"value_min": "0",
			"value_max": "0",
			"value_default": "0",
			"read_only": "0",
			"write_only": "0",
			"reinclude": "0",
			"overview": "<p>Notification Commands vs Multi-Level Sensor Toggle.</p> <p>Notifications set as default - Value \"0\"</p> <p>To enable MLS - Value set to any number except 0</p>",
			"ordering": "2649",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063",
			"bitmask": "0",
			"limit_options": "0",
			"advanced": "0",
			"confirmation": "0",
			"options": []
		}
	],
	"associations": [
		{
			"id": "1793",
			"device": "934",
			"group_id": "1",
			"label": "Lifeline",
			"description": "Lifeline",
			"max": "5",
			"controller": "1",
			"overview": "<p>The controller should automatically set up this association.</p>\r\n<ul>\r\n<li>Device Reset Locally (via 3 quick presses of the program switch)</li>\r\n<li>Multilevel Sensor Temperature Report</li>\r\n<li>Meter Pulse Report (flow count)</li>\r\n<li>Notifications\r\n<ul>\r\n<li>Under temperature detected</li>\r\n<li>Over temperature detected</li>\r\n<li>Power (Voltage Drop/Droop)</li>\r\n</ul>\r\n</li>\r\n</ul>",
			"ordering": "997",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063"
		},
		{
			"id": "1794",
			"device": "934",
			"group_id": "2",
			"label": "High Temperature",
			"description": "",
			"max": "5",
			"controller": "0",
			"overview": "<p>Basic Set Command with value = 0xFF is sent to the associated nodes to indicate that a Temperature High condition has been detected.  When the temperature is back in the normal range, one additional report with value = 0x00 is sent.</p>",
			"ordering": "998",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063"
		},
		{
			"id": "1795",
			"device": "934",
			"group_id": "3",
			"label": "Low Temperature",
			"description": "",
			"max": "5",
			"controller": "0",
			"overview": "<p>Basic Set Command with value = 0xFF is sent to the associated nodes to indicate that a Temperature Low condition has been detected.  When the temperature is back in the normal range, one additional report with value = 0x00 is sent.</p>",
			"ordering": "999",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063"
		},
		{
			"id": "1796",
			"device": "934",
			"group_id": "4",
			"label": "Flow Detected",
			"description": "",
			"max": "5",
			"controller": "0",
			"overview": "<p>Basic Set Command with value = 0xFF is sent when the meter count is incremented (i.e., flow has started).</p>\r\n<p>Do not set associations for this group if water flow is expected.  When flow is not expected (for example, at a vacant vacation home), this association group can be set to perform various tasks such as commanding a water valve to open in order to stop the flow of water and/or commanding a siren/strobe unit to activate.  Since the Basic Set Command (value 0xFF) is sent every 30 seconds while the water is flowing; this commanding should be turned off by removing the associations in this group if water flow is normally expected.</p>\r\n<p>Note that no command is ever sent with a value of 0x00 because the FMI cannot know if or when conditions have returned to normal.</p>",
			"ordering": "1000",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063"
		}
	],
	"documents": [
		{
			"id": "1760",
			"device": "934",
			"file": "Flow-Meter-Technical-Manual.pdf",
			"label": "Flow Meter Technical Manual",
			"created_by": "2063",
			"ordering": "1738",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00"
		},
		{
			"id": "1761",
			"device": "934",
			"file": "static1-squarespace-com.jpeg",
			"label": "manufacturer's image",
			"created_by": "2063",
			"ordering": "1739",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00"
		}
	],
	"endpoints": [
		{
			"id": "1406",
			"device": "934",
			"number": "0",
			"label": "Endpoint 0",
			"basicclass": {
				"id": "5",
				"value": "4",
				"name": "BASIC_TYPE_ROUTING_SLAVE",
				"label": "BASIC_TYPE_ROUTING_SLAVE",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"genericclass": {
				"id": "20",
				"value": "33",
				"name": "GENERIC_TYPE_SENSOR_MULTILEVEL",
				"label": "GENERIC_TYPE_SENSOR_MULTILEVEL",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"specificclass": {
				"id": "46",
				"generic": "20",
				"value": "1",
				"name": "SPECIFIC_TYPE_ROUTING_SENSOR_MULTILEVEL",
				"label": "SPECIFIC_TYPE_ROUTING_SENSOR_MULTILEVEL",
				"ordering": "0",
				"state": "0",
				"checked_out": "0",
				"checked_out_time": "0000-00-00 00:00:00",
				"created_by": "0"
			},
			"ordering": "0",
			"state": "0",
			"checked_out": "0",
			"checked_out_time": "0000-00-00 00:00:00",
			"created_by": "2063",
			"commandClasses": [
				{
					"id": "13259",
					"endpoint": "1406",
					"commandclass": {
						"id": "1",
						"name": "NO_OPERATION",
						"label": "No Operation - used for PINGing a device.",
						"class_ref": "0",
						"support_oh1": "0",
						"support_oh2": "0",
						"support_ozw": "0",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "275"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13254",
					"endpoint": "1406",
					"commandclass": {
						"id": "33",
						"name": "BASIC",
						"label": "BASIC",
						"class_ref": "32",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13264",
					"endpoint": "1406",
					"commandclass": {
						"id": "49",
						"name": "SENSOR_BINARY",
						"label": "SENSOR_BINARY",
						"class_ref": "48",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "0",
					"nif": "",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": [
						{
							"id": "3758",
							"commandclass": "13264",
							"name": "sensor_binary",
							"config": "",
							"label": "Binary Sensor",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "2063",
							"options": []
						}
					]
				},
				{
					"id": "13260",
					"endpoint": "1406",
					"commandclass": {
						"id": "50",
						"name": "SENSOR_MULTILEVEL",
						"label": "SENSOR_MULTILEVEL",
						"class_ref": "49",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "8",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": [
						{
							"id": "3753",
							"commandclass": "13260",
							"name": "sensor_temperature",
							"config": "type=TEMPERATURE",
							"label": "Sensor (temperature)",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "2063",
							"options": []
						},
						{
							"id": "3754",
							"commandclass": "13260",
							"name": "sensor_general",
							"config": "type=GENERAL",
							"label": "Sensor (general)",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "2063",
							"options": []
						}
					]
				},
				{
					"id": "13258",
					"endpoint": "1406",
					"commandclass": {
						"id": "51",
						"name": "METER",
						"label": "METER",
						"class_ref": "50",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "2",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": [
						{
							"id": "3752",
							"commandclass": "13258",
							"name": "meter_water_gallons",
							"config": "type=W_Gallons",
							"label": "Water meter (amps)",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "2063",
							"options": []
						}
					]
				},
				{
					"id": "13253",
					"endpoint": "1406",
					"commandclass": {
						"id": "90",
						"name": "ASSOCIATION_GROUP_INFO",
						"label": "ASSOCIATION_GROUP_INFO",
						"class_ref": "89",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13257",
					"endpoint": "1406",
					"commandclass": {
						"id": "91",
						"name": "DEVICE_RESET_LOCALLY",
						"label": "DEVICE_RESET_LOCALLY",
						"class_ref": "90",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13255",
					"endpoint": "1406",
					"commandclass": {
						"id": "95",
						"name": "ZWAVE_PLUS_INFO",
						"label": "ZWAVE_PLUS_INFO",
						"class_ref": "94",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13261",
					"endpoint": "1406",
					"commandclass": {
						"id": "113",
						"name": "CONFIGURATION",
						"label": "CONFIGURATION",
						"class_ref": "112",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13263",
					"endpoint": "1406",
					"commandclass": {
						"id": "114",
						"name": "ALARM",
						"label": "ALARM",
						"class_ref": "113",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "7",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": [
						{
							"id": "3755",
							"commandclass": "13263",
							"name": "alarm_heat",
							"config": "type=HEAT",
							"label": "Alarm (heat)",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "2063",
							"options": []
						},
						{
							"id": "3756",
							"commandclass": "13263",
							"name": "alarm_flood",
							"config": "type=FLOOD",
							"label": "Alarm (flood)",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "2063",
							"options": []
						},
						{
							"id": "3757",
							"commandclass": "13263",
							"name": "alarm_power",
							"config": "type=POWER_MANAGEMENT",
							"label": "Alarm (power)",
							"overview": "",
							"ordering": "0",
							"deprecated": "0000-00-00",
							"state": "0",
							"checked_out": "0",
							"checked_out_time": "0000-00-00 00:00:00",
							"created_by": "2063",
							"options": []
						}
					]
				},
				{
					"id": "13265",
					"endpoint": "1406",
					"commandclass": {
						"id": "115",
						"name": "MANUFACTURER_SPECIFIC",
						"label": "MANUFACTURER_SPECIFIC",
						"class_ref": "114",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13252",
					"endpoint": "1406",
					"commandclass": {
						"id": "116",
						"name": "POWERLEVEL",
						"label": "POWERLEVEL",
						"class_ref": "115",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13262",
					"endpoint": "1406",
					"commandclass": {
						"id": "123",
						"name": "FIRMWARE_UPDATE_MD",
						"label": "FIRMWARE_UPDATE_MD",
						"class_ref": "122",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13256",
					"endpoint": "1406",
					"commandclass": {
						"id": "129",
						"name": "BATTERY",
						"label": "BATTERY",
						"class_ref": "128",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "1",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13266",
					"endpoint": "1406",
					"commandclass": {
						"id": "134",
						"name": "ASSOCIATION",
						"label": "ASSOCIATION",
						"class_ref": "133",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "2",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				},
				{
					"id": "13251",
					"endpoint": "1406",
					"commandclass": {
						"id": "135",
						"name": "VERSION",
						"label": "VERSION",
						"class_ref": "134",
						"support_oh1": "",
						"support_oh2": "",
						"support_ozw": "",
						"description": "",
						"ordering": "0",
						"state": "1",
						"checked_out": "0",
						"checked_out_time": "0000-00-00 00:00:00",
						"created_by": "0"
					},
					"basic": "0",
					"version": "2",
					"nif": "1",
					"secure": "",
					"nonsecure": "1",
					"config": "",
					"ordering": "0",
					"state": "0",
					"checked_out": "0",
					"checked_out_time": "0000-00-00 00:00:00",
					"created_by": "2063",
					"channels": []
				}
			]
		}
	],
	"changelog": [],
	"xml": [],
	"user_owned": false,
	"database_id": "934",
	"errors": [],
	"warnings": [],
	"notices": [
		"Endpoint 0 has no command class linked to the basic class."
	]
}