{
  "name": "@zwave-js/repo",
  "private": true,
  "description": "Z-Wave driver written entirely in JavaScript/TypeScript",
  "keywords": [],
  "author": {
    "name": "AlCalzone",
    "email": "d.griesel@gmx.net"
  },
  "contributors": [
    "Daniel Lando (https://github.com/robertsLando)",
    "RoboPhred (https://github.com/RoboPhred)"
  ],
  "license": "MIT",
  "homepage": "https://github.com/AlCalzone/node-zwave-js#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AlCalzone/node-zwave-js.git"
  },
  "bugs": {
    "url": "https://github.com/AlCalzone/node-zwave-js/issues"
  },
  "funding": {
    "url": "https://github.com/sponsors/AlCalzone/"
  },
  "workspaces": [
    "packages/*"
  ],
  "devDependencies": {
    "@actions/core": "^1.4.0",
    "@actions/exec": "^1.1.0",
    "@actions/github": "^5.0.0",
    "@alcalzone/jsonl-db": "^1.3.0",
    "@alcalzone/release-script": "^1.10.0",
    "@babel/core": "^7.14.3",
    "@babel/plugin-proposal-decorators": "^7.14.2",
    "@babel/preset-env": "^7.14.4",
    "@babel/preset-typescript": "^7.13.0",
    "@commitlint/cli": "^12.1.4",
    "@commitlint/config-conventional": "^12.1.4",
    "@fimbul/mithotyn": "^0.24.0",
    "@fimbul/wotan": "^0.24.0",
    "@types/jest": "^26.0.23",
    "@types/node": "^15.12.5",
    "@typescript-eslint/eslint-plugin": "^4.26.1",
    "@typescript-eslint/parser": "^4.26.1",
    "@zwave-js/config": "workspace:packages/config",
    "@zwave-js/core": "workspace:packages/core",
    "commitizen": "^4.2.4",
    "coveralls": "^3.1.0",
    "cz-conventional-changelog": "^3.2.0",
    "esbuild-register": "^2.6.0",
    "eslint": "^7.28.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "fs-extra": "^9.0.1",
    "husky": "^6.0.0",
    "jest": "^26.4.2",
    "jest-extended": "^0.11.5",
    "lerna": "^4.0.0",
    "prettier": "^2.3.1",
    "prettier-plugin-organize-imports": "^2.1.0",
    "reflect-metadata": "^0.1.13",
    "ts-node": "^9.0.0",
    "typescript": "^4.3.2",
    "zwave-js": "workspace:packages/zwave-js"
  },
  "scripts": {
    "run-all": "yarn workspaces foreach -vip --topological-dev --exclude @zwave-js/repo run",
    "run-all:p": "yarn workspaces foreach -vip --exclude @zwave-js/repo run",
    "run-zjs": "yarn workspaces foreach -vip --include zwave-js run",
    "run-deps": "yarn workspaces foreach -vip --topological-dev --include @zwave-js/* --exclude @zwave-js/repo run",
    "run-deps:p": "yarn workspaces foreach -vip --include @zwave-js/* --exclude @zwave-js/repo run",
    "build": "yarn run-zjs build",
    "build:full": "yarn run-deps build && yarn run-zjs build:full",
    "watch": "yarn run-all:p watch",
    "test:reset": "jest --clear-cache",
    "test:ts": "jest",
    "test:ci": "yarn run test:ts --runInBand",
    "test:watch": "yarn run test:ts --watch",
    "test": "yarn run test:watch",
    "coverage": "yarn run test:ts --collect-coverage",
    "coverage:ci": "yarn run test:ci --collect-coverage",
    "show-coverage": "yarn run coverage && start ./coverage/index.html",
    "lint:ts": "eslint --ext .ts \"packages/*/src/**/*.ts\"",
    "lint:wotan": "wotan",
    "lint:config": "yarn workspaces foreach --exclude @zwave-js/repo run lint:config",
    "lint:configjson": "prettier -c \"packages/config/config/**/*.json\"",
    "lint:zwave": "yarn run-all lint:zwave",
    "lint": "yarn run lint:wotan && yarn run lint:ts && yarn run lint:configjson",
    "implemented_ccs": "yarn ts packages/maintenance/src/implementedCCs.ts",
    "gh-cc-table": "yarn run implemented_ccs --flavor=github --only-incomplete",
    "toLogEntryOverview": "yarn ts packages/zwave-js/maintenance/checkCCToLogEntry.ts",
    "usbdebug": "cmd.exe /c \"test\\usbdebug.bat\"",
    "commit": "git-cz",
    "release": "yarn run build && lerna version --no-commit-hooks",
    "release:all": "yarn run build && lerna version --no-commit-hooks --force-publish",
    "preversion": "release-script --lerna-check",
    "version": "yarn install && release-script --lerna",
    "postversion": "git push && git push --tags",
    "config": "yarn ts packages/config/maintenance/importConfig.ts",
    "docs": "docsify serve docs",
    "docs:generate": "yarn ts packages/maintenance/src/generateTypedDocs.ts",
    "test:perf": "yarn ts test/valuedb-perf.ts",
    "test:firmware": "yarn ts test/firmware-extraction.ts",
    "ts": "node -r esbuild-register"
  },
  "readme": "README.md",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
