// Fibargroup FGGC-001
// Fibaro Swipe Scene Controller
{
	"manufacturer": "Fibargroup",
	"manufacturerId": "0x010f",
	"label": "FGGC-001",
	"description": "Fibaro Swipe Scene Controller",
	"devices": [
		{
			"productType": "0x0d01",
			"productId": "0x1000"
		},
		{
			"productType": "0x0d01",
			"productId": "0x2000"
		},
		{
			"productType": "0x0d01",
			"productId": "0x3000"
		}
	],
	"firmwareVersion": {
		"min": "0.0",
		"max": "255.255"
	},
	"paramInformation": {
		"1": {
			"label": "Device Orientation",
			"description": "Orientation in relation to default position.",
			"valueSize": 1,
			"minValue": 0,
			"maxValue": 3,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": false,
			"options": [
				{
					"label": "Default Orientation",
					"value": 0
				},
				{
					"label": "180° rotation",
					"value": 1
				},
				{
					"label": "90° clockwise rotation",
					"value": 2
				},
				{
					"label": "90° counter-clockwise rotation",
					"value": 3
				}
			]
		},
		"2": {
			"label": "Buzzer - acoustic signal settings",
			"description": "Acoustic signalling of gestures detection.",
			"valueSize": 1,
			"minValue": 0,
			"maxValue": 1,
			"defaultValue": 1,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": false,
			"options": [
				{
					"label": "Gestures detection is not signalled",
					"value": 0
				},
				{
					"label": "Gestures detection is signalled",
					"value": 1
				}
			]
		},
		"3": {
			"label": "LED diode - visual indicator settings",
			"description": "Visual indication of gestures detection",
			"valueSize": 1,
			"minValue": 0,
			"maxValue": 1,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": false,
			"options": [
				{
					"label": "Gestures detection is not indicated",
					"value": 0
				},
				{
					"label": "Gestures detection is indicated",
					"value": 1
				}
			]
		},
		"4[0x01]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Buzzer - signalling successful recogniction of gesture",
			"description": "Acoustic signalling of gesture recognition result (using the built-in buzzer)",
			"defaultValue": 1
		},
		"4[0x02]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Buzzer - signalling failed recogniction of gesture",
			"description": "Acoustic signalling of gesture recognition result (using the built-in buzzer)",
			"defaultValue": 1
		},
		"5": {
			"label": "Powering mode update interval",
			"description": "Check if the USB pwr supply is connected, update pwr mode",
			"valueSize": 2,
			"unit": "minutes",
			"minValue": 0,
			"maxValue": 1080,
			"defaultValue": 4,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"6": {
			"label": "Power saving mode (battery mode)",
			"description": "This parameter determines operation of gesture detection when battery powered.",
			"valueSize": 1,
			"minValue": 0,
			"maxValue": 2,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": false,
			"options": [
				{
					"label": "Standby mode",
					"value": 0
				},
				{
					"label": "Simple mode",
					"value": 1
				},
				{
					"label": "Swipe does not enter power saving mode",
					"value": 2
				}
			]
		},
		"7": {
			"label": "Hold gesture to enter the menu",
			"description": "Choose if the menu can be entered using the Hold gesture.",
			"valueSize": 1,
			"minValue": 0,
			"maxValue": 1,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": false,
			"options": [
				{
					"label": "Hold gesture to enter the menu enabled",
					"value": 0
				},
				{
					"label": "Hold gesture to enter the menu disabled",
					"value": 1
				}
			]
		},
		"10[0x01]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Scenes for flick UP gesture sent to controller",
			"description": "Should this action be sent to the 1st \"Lifeline\" group",
			"defaultValue": 1
		},
		"10[0x02]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Scenes for flick DOWN gesture sent to controller",
			"description": "Should this action be sent to the 1st \"Lifeline\" group",
			"defaultValue": 1
		},
		"10[0x04]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Scenes for flick LEFT gesture sent to controller",
			"description": "Should this action be sent to the 1st \"Lifeline\" group",
			"defaultValue": 1
		},
		"10[0x08]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Scenes for flick RIGHT gesture sent to controller",
			"description": "Should this action be sent to the 1st \"Lifeline\" group",
			"defaultValue": 1
		},
		"10[0x10]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Scenes for clockwise circular gesture sent to controller",
			"description": "Should this action be sent to the 1st \"Lifeline\" group"
		},
		"10[0x20]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Scenes for CCW circular gesture sent to controller",
			"description": "Should this action be sent to the 1st \"Lifeline\" group"
		},
		"11[0x01]": {
			"$import": "templates/fibarogroup_templates.json#secure_assoc_bit",
			"label": "Associations: Send secure commands to 2nd group (Flick up)"
		},
		"11[0x02]": {
			"$import": "templates/fibarogroup_templates.json#secure_assoc_bit",
			"label": "Associations: Send secure commands to 3rd group (Flick down)"
		},
		"11[0x04]": {
			"$import": "templates/fibarogroup_templates.json#secure_assoc_bit",
			"label": "Associations: Send secure commands to 4th group (Flick left)"
		},
		"11[0x08]": {
			"$import": "templates/fibarogroup_templates.json#secure_assoc_bit",
			"label": "Associations: Send secure commands to 5th group (Flick right)"
		},
		"11[0x10]": {
			"$import": "templates/fibarogroup_templates.json#secure_assoc_bit",
			"label": "Associations: Send secure commands to 6th group (Circular AirWheel)"
		},
		"12[0x01]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Associations: Toggle mode for 2nd group (Flick up)",
			"defaultValue": 1
		},
		"12[0x02]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Associations: Toggle mode for 3rd group (Flick down)",
			"defaultValue": 1
		},
		"12[0x04]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Associations: Toggle mode for 4th group (Flick left)",
			"defaultValue": 1
		},
		"12[0x08]": {
			"$import": "../templates/master_template.json#base_enable_disable",
			"label": "Associations: Toggle mode for 5th group (Flick right)",
			"defaultValue": 1
		},
		"13": {
			"label": "Rate of smooth level control",
			"description": "Choose gesture time for \"AirWheel\" to reach max/min level.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"20": {
			"label": "SWITCH ON control frame value for FLICK UP gesture",
			"description": "Value sent in SWITCH ON command",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"21": {
			"label": "SWITCH OFF frame value for FLICK UP",
			"description": "Value sent in SWITCH OFF command frame.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"22": {
			"label": "SWITCH ON frame value for FLICK DOWN",
			"description": "Value sent in SWITCH ON command frame.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"23": {
			"label": "SWITCH OFF frame value for FLICK DOWN",
			"description": "Value sent in SWITCH OFF command frame.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"24": {
			"label": "SWITCH ON frame value for FLICK LEFT",
			"description": "Value sent in SWITCH ON command frame.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"25": {
			"label": "SWITCH OFF frame value for FLICK LEFT",
			"description": "Value sent in SWITCH OFF command frame.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"26": {
			"label": "SWITCH ON frame value for FLICK RIGHT",
			"description": "Value sent in SWITCH ON command frame.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"27": {
			"label": "SWITCH OFF frame value for FLICK RIGHT",
			"description": "Value sent in SWITCH OFF command frame.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 255,
			"defaultValue": 255,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"30": {
			"label": "Launch Sequence learning mode",
			"valueSize": 1,
			"minValue": 0,
			"maxValue": 6,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"31": {
			"label": "1st gestures sequence (SLOT 1)",
			"description": "Value containing sequence of gestures.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 1076,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"32": {
			"label": "2nd gestures sequence (SLOT 2)",
			"description": "Value containing sequence of gestures.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 1076,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"33": {
			"label": "3rd gestures sequence (SLOT 3)",
			"description": "Value containing sequence of gestures.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 1076,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"34": {
			"label": "4th gestures sequence (SLOT 4)",
			"description": "Value containing sequence of gestures.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 1076,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"35": {
			"label": "5th gestures sequence (SLOT 5)",
			"description": "Value containing sequence of gestures.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 1076,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		},
		"36": {
			"label": "6th gestures sequence (SLOT 6)",
			"description": "Value containing sequence of gestures.",
			"valueSize": 2,
			"minValue": 0,
			"maxValue": 1076,
			"defaultValue": 0,
			"readOnly": false,
			"writeOnly": false,
			"allowManualEntry": true
		}
	}
}
